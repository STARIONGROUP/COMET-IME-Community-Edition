<Window x:Class="COMET.Views.UpdateDownloaderInstaller"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
        xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
        xmlns:converters="clr-namespace:CDP4Composition.Converters;assembly=CDP4Composition"
        xmlns:behaviors="clr-namespace:COMET.Behaviors"
        xmlns:views="clr-namespace:COMET.Views"
        mc:Ignorable="d"
        Title="CDP4-COMET-Update" Height="600" Width="600" ResizeMode="NoResize" BorderThickness="0" Background="White">
    <Window.Resources>
        <dxmvvm:BooleanNegationConverter x:Key="BooleanNegationConverter"></dxmvvm:BooleanNegationConverter>
        <converters:BooleanToGridUnitConverter x:Key="BooleanToGridUnitConverter"></converters:BooleanToGridUnitConverter>
        <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"></converters:BooleanToVisibilityConverter>
        <converters:DoubleToVisibilityConverter x:Key="DoubleToVisibilityConverter"></converters:DoubleToVisibilityConverter>
        <converters:IntegerToVisibilityConverter x:Key="IntegerToVisibilityConverter"></converters:IntegerToVisibilityConverter>
    </Window.Resources>
    <dxmvvm:Interaction.Behaviors>
        <behaviors:UpdateDownloaderInstallerBehavior></behaviors:UpdateDownloaderInstallerBehavior>
    </dxmvvm:Interaction.Behaviors>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="2*"></RowDefinition>
            <RowDefinition Height="{Binding IsInDownloadMode, Converter={StaticResource BooleanToGridUnitConverter}, ConverterParameter=3}"></RowDefinition>
            <RowDefinition Height="8*"></RowDefinition>
            <RowDefinition Height="2*"></RowDefinition>
        </Grid.RowDefinitions>
        <Grid Margin="10,0,10,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Label Grid.Row="0" VerticalContentAlignment="Bottom" FontSize="50" HorizontalAlignment="Left" Content="Updates" Grid.Column="0"/>
            <Button IsEnabled="{Binding Path=IsInstallationOrDownloadInProgress, Converter={StaticResource BooleanNegationConverter}}"  BorderThickness="0" Grid.Column="1" x:Name="SelectAllUpdateCheckBox" Command="{Binding SelectAllUpdateCheckBoxCommand}" Margin="0,44,0,10" HorizontalAlignment="Right" Width="131">
                Select/Deselect all
            </Button>
        </Grid>
        <Grid Margin="10,0,10,10" Grid.Row="1">
            <ListView VerticalContentAlignment="Center" Visibility="{Binding IsInDownloadMode, Converter={StaticResource BooleanToVisibilityConverter}}" ScrollViewer.VerticalScrollBarVisibility="Disabled" IsEnabled="{Binding Path=IsInstallationOrDownloadInProgress, Converter={StaticResource BooleanNegationConverter}}" HorizontalContentAlignment="Stretch" x:Name="AvailableImeContainer" SelectionMode="Multiple" ItemsSource="{Binding AvailableIme}">
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="IsSelected" Value="{Binding IsSelected}"/>
                    </Style>
                </ListView.ItemContainerStyle>
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <views:ImeRow/>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="#F6B944" FontSize="18" Text="CDP4-COMET IME is up to date!" Visibility="{Binding AvailableIme.Count, Converter={StaticResource IntegerToVisibilityConverter}, ConverterParameter=Invert}"/>
        </Grid>

        <Grid Margin="10,0,10,10" Grid.Row="2">
            <ListView IsEnabled="{Binding Path=IsInstallationOrDownloadInProgress, Converter={StaticResource BooleanNegationConverter}}" HorizontalContentAlignment="Stretch" x:Name="AvailablePluginsContainer" SelectionMode="Multiple" ItemsSource="{Binding AvailablePlugins}">
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="IsSelected" Value="{Binding IsSelected}"/>
                    </Style>
                </ListView.ItemContainerStyle>
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <views:PluginRow/>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="#F6B944" FontSize="18" Text="Plugins are up to date!"  Visibility="{Binding AvailablePlugins.Count, Converter={StaticResource IntegerToVisibilityConverter}, ConverterParameter=Invert}"/>
        </Grid>

        <Grid Margin="10,0,10,0" Grid.Row="3">
            <Grid.RowDefinitions>
                <RowDefinition Height="59*"></RowDefinition>
                <RowDefinition Height="17*"></RowDefinition>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="4*"></ColumnDefinition>
                <ColumnDefinition Width="6*"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <ProgressBar Visibility="{Binding IsCheckingApi, Converter={StaticResource BooleanToVisibilityConverter}}" Foreground="#F6B944" Height="48" Width="100" HorizontalAlignment="Center" VerticalAlignment="Center" IsIndeterminate="True"/>
            <Label Visibility="{Binding IsCheckingApi, Converter={StaticResource BooleanToVisibilityConverter}}" Grid.Row="1" Grid.Column="0" Content="Loading in progress" HorizontalAlignment="Center" VerticalAlignment="Center" Height="24" Width="105"/>

            <Grid Grid.RowSpan="2" Grid.Row="0" Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="5*"></RowDefinition>
                    <RowDefinition Height="9*"></RowDefinition>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="3*"></ColumnDefinition>
                    <ColumnDefinition Width="3*"></ColumnDefinition>
                    <ColumnDefinition Width="3*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <CheckBox Visibility="{Binding IsInDownloadMode, Converter={StaticResource BooleanToVisibilityConverter}}" Command="{Binding RestartAfterDownloadCommand}" Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2" HorizontalAlignment="Right" FlowDirection="RightToLeft">
                    <TextBlock FlowDirection="LeftToRight" Text="Restart after download to install"/>
                </CheckBox>
                <Button Grid.Row="1" Grid.Column="0" Margin="5,0,5,0" VerticalAlignment="Center" HorizontalAlignment="Right" Command="{Binding CancelCommand}" Background="White" Content="Cancel" Foreground="Black" Width="100" Height="37" ></Button>
                <Button Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" Margin="5,0,5,0" Visibility="{Binding IsInDownloadMode, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=Invert}"  VerticalAlignment="Center" HorizontalAlignment="Stretch" Command="{Binding InstallCommand}" Background="White" Content="Install" Foreground="Black" Height="37" ></Button>
                <Button Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" Margin="5,0,0,0" Visibility="{Binding IsInDownloadMode, Converter={StaticResource BooleanToVisibilityConverter}}" VerticalAlignment="Center" HorizontalAlignment="Stretch" Command="{Binding DownloadCommand}" Content="{Binding DownloadButtonText}" Foreground="Black" Height="37" >
                    <Button.Style>
                        <Style TargetType="Button">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding HasToRestartClientAfterDownload}" Value="True">
                                    <Setter Property="dx:ThemeManager.ThemeName" Value="DeepBlue" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding HasToRestartClientAfterDownload}" Value="False">
                                    <Setter Property="dx:ThemeManager.ThemeName" Value="Seven" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </Grid>
        </Grid>
    </Grid>
</Window>
